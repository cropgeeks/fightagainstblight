/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.records;


import jhi.fab.codegen.tables.SsrGenotypes;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SsrGenotypesRecord extends UpdatableRecordImpl<SsrGenotypesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fab.ssr_genotypes.genotype_id</code>.
     */
    public void setGenotypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fab.ssr_genotypes.genotype_id</code>.
     */
    public Integer getGenotypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fab.ssr_genotypes.genotype_name</code>.
     */
    public void setGenotypeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fab.ssr_genotypes.genotype_name</code>.
     */
    public String getGenotypeName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SsrGenotypesRecord
     */
    public SsrGenotypesRecord() {
        super(SsrGenotypes.SSR_GENOTYPES);
    }

    /**
     * Create a detached, initialised SsrGenotypesRecord
     */
    public SsrGenotypesRecord(Integer genotypeId, String genotypeName) {
        super(SsrGenotypes.SSR_GENOTYPES);

        setGenotypeId(genotypeId);
        setGenotypeName(genotypeName);
        resetTouchedOnNotNull();
    }
}
