/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.records;


import jhi.fab.codegen.tables.Countries;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CountriesRecord extends UpdatableRecordImpl<CountriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fab.countries.country_id</code>.
     */
    public void setCountryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fab.countries.country_id</code>.
     */
    public Integer getCountryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fab.countries.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fab.countries.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountriesRecord
     */
    public CountriesRecord() {
        super(Countries.COUNTRIES);
    }

    /**
     * Create a detached, initialised CountriesRecord
     */
    public CountriesRecord(Integer countryId, String name) {
        super(Countries.COUNTRIES);

        setCountryId(countryId);
        setName(name);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised CountriesRecord
     */
    public CountriesRecord(jhi.fab.codegen.tables.pojos.Countries value) {
        super(Countries.COUNTRIES);

        if (value != null) {
            setCountryId(value.getCountryId());
            setName(value.getName());
            resetTouchedOnNotNull();
        }
    }
}
