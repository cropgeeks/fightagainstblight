/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.records;


import jhi.fab.codegen.tables.Subsamples;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SubsamplesRecord extends UpdatableRecordImpl<SubsamplesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fab.subsamples.subsample_id</code>.
     */
    public void setSubsampleId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fab.subsamples.subsample_id</code>.
     */
    public Integer getSubsampleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fab.subsamples.outbreak_id</code>.
     */
    public void setOutbreakId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>fab.subsamples.outbreak_id</code>.
     */
    public Integer getOutbreakId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>fab.subsamples.genotype_id</code>.
     */
    public void setGenotypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>fab.subsamples.genotype_id</code>.
     */
    public Integer getGenotypeId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubsamplesRecord
     */
    public SubsamplesRecord() {
        super(Subsamples.SUBSAMPLES);
    }

    /**
     * Create a detached, initialised SubsamplesRecord
     */
    public SubsamplesRecord(Integer subsampleId, Integer outbreakId, Integer genotypeId) {
        super(Subsamples.SUBSAMPLES);

        setSubsampleId(subsampleId);
        setOutbreakId(outbreakId);
        setGenotypeId(genotypeId);
        resetTouchedOnNotNull();
    }
}
