/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;

import jhi.fab.codegen.enums.ViewEuroblightHost;
import jhi.fab.codegen.enums.ViewEuroblightMatingType;
import jhi.fab.codegen.enums.ViewEuroblightStatus;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewEuroblight implements Serializable {

    private static final long serialVersionUID = 1L;

    private String subsampleCode;
    private String material;
    private Boolean myceliaPellet;
    private Boolean cultureSlope;
    private ViewEuroblightMatingType matingType;
    private String outbreakCode;
    private ViewEuroblightHost host;
    private String userName;
    private String varietyName;
    private String country;
    private String itlNuts;
    private String outcode;
    private Double viewLatitude;
    private Double viewLongitude;
    private String sourceName;
    private String severityName;
    private String genotypeName;
    private Integer sourceId;
    private Integer severityId;
    private Integer varietyId;
    private Integer userId;
    private ViewEuroblightStatus status;
    private LocalDate dateSubmitted;
    private LocalDate dateGenotyped;
    private String adminComments;

    public ViewEuroblight() {}

    public ViewEuroblight(ViewEuroblight value) {
        this.subsampleCode = value.subsampleCode;
        this.material = value.material;
        this.myceliaPellet = value.myceliaPellet;
        this.cultureSlope = value.cultureSlope;
        this.matingType = value.matingType;
        this.outbreakCode = value.outbreakCode;
        this.host = value.host;
        this.userName = value.userName;
        this.varietyName = value.varietyName;
        this.country = value.country;
        this.itlNuts = value.itlNuts;
        this.outcode = value.outcode;
        this.viewLatitude = value.viewLatitude;
        this.viewLongitude = value.viewLongitude;
        this.sourceName = value.sourceName;
        this.severityName = value.severityName;
        this.genotypeName = value.genotypeName;
        this.sourceId = value.sourceId;
        this.severityId = value.severityId;
        this.varietyId = value.varietyId;
        this.userId = value.userId;
        this.status = value.status;
        this.dateSubmitted = value.dateSubmitted;
        this.dateGenotyped = value.dateGenotyped;
        this.adminComments = value.adminComments;
    }

    public ViewEuroblight(
        String subsampleCode,
        String material,
        Boolean myceliaPellet,
        Boolean cultureSlope,
        ViewEuroblightMatingType matingType,
        String outbreakCode,
        ViewEuroblightHost host,
        String userName,
        String varietyName,
        String country,
        String itlNuts,
        String outcode,
        Double viewLatitude,
        Double viewLongitude,
        String sourceName,
        String severityName,
        String genotypeName,
        Integer sourceId,
        Integer severityId,
        Integer varietyId,
        Integer userId,
        ViewEuroblightStatus status,
        LocalDate dateSubmitted,
        LocalDate dateGenotyped,
        String adminComments
    ) {
        this.subsampleCode = subsampleCode;
        this.material = material;
        this.myceliaPellet = myceliaPellet;
        this.cultureSlope = cultureSlope;
        this.matingType = matingType;
        this.outbreakCode = outbreakCode;
        this.host = host;
        this.userName = userName;
        this.varietyName = varietyName;
        this.country = country;
        this.itlNuts = itlNuts;
        this.outcode = outcode;
        this.viewLatitude = viewLatitude;
        this.viewLongitude = viewLongitude;
        this.sourceName = sourceName;
        this.severityName = severityName;
        this.genotypeName = genotypeName;
        this.sourceId = sourceId;
        this.severityId = severityId;
        this.varietyId = varietyId;
        this.userId = userId;
        this.status = status;
        this.dateSubmitted = dateSubmitted;
        this.dateGenotyped = dateGenotyped;
        this.adminComments = adminComments;
    }

    /**
     * Getter for <code>fab.view_euroblight.subsample_code</code>.
     */
    public String getSubsampleCode() {
        return this.subsampleCode;
    }

    /**
     * Setter for <code>fab.view_euroblight.subsample_code</code>.
     */
    public void setSubsampleCode(String subsampleCode) {
        this.subsampleCode = subsampleCode;
    }

    /**
     * Getter for <code>fab.view_euroblight.material</code>.
     */
    public String getMaterial() {
        return this.material;
    }

    /**
     * Setter for <code>fab.view_euroblight.material</code>.
     */
    public void setMaterial(String material) {
        this.material = material;
    }

    /**
     * Getter for <code>fab.view_euroblight.mycelia_pellet</code>.
     */
    public Boolean getMyceliaPellet() {
        return this.myceliaPellet;
    }

    /**
     * Setter for <code>fab.view_euroblight.mycelia_pellet</code>.
     */
    public void setMyceliaPellet(Boolean myceliaPellet) {
        this.myceliaPellet = myceliaPellet;
    }

    /**
     * Getter for <code>fab.view_euroblight.culture_slope</code>.
     */
    public Boolean getCultureSlope() {
        return this.cultureSlope;
    }

    /**
     * Setter for <code>fab.view_euroblight.culture_slope</code>.
     */
    public void setCultureSlope(Boolean cultureSlope) {
        this.cultureSlope = cultureSlope;
    }

    /**
     * Getter for <code>fab.view_euroblight.mating_type</code>.
     */
    public ViewEuroblightMatingType getMatingType() {
        return this.matingType;
    }

    /**
     * Setter for <code>fab.view_euroblight.mating_type</code>.
     */
    public void setMatingType(ViewEuroblightMatingType matingType) {
        this.matingType = matingType;
    }

    /**
     * Getter for <code>fab.view_euroblight.outbreak_code</code>.
     */
    public String getOutbreakCode() {
        return this.outbreakCode;
    }

    /**
     * Setter for <code>fab.view_euroblight.outbreak_code</code>.
     */
    public void setOutbreakCode(String outbreakCode) {
        this.outbreakCode = outbreakCode;
    }

    /**
     * Getter for <code>fab.view_euroblight.host</code>.
     */
    public ViewEuroblightHost getHost() {
        return this.host;
    }

    /**
     * Setter for <code>fab.view_euroblight.host</code>.
     */
    public void setHost(ViewEuroblightHost host) {
        this.host = host;
    }

    /**
     * Getter for <code>fab.view_euroblight.user_name</code>.
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Setter for <code>fab.view_euroblight.user_name</code>.
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }

    /**
     * Getter for <code>fab.view_euroblight.variety_name</code>.
     */
    public String getVarietyName() {
        return this.varietyName;
    }

    /**
     * Setter for <code>fab.view_euroblight.variety_name</code>.
     */
    public void setVarietyName(String varietyName) {
        this.varietyName = varietyName;
    }

    /**
     * Getter for <code>fab.view_euroblight.country</code>.
     */
    public String getCountry() {
        return this.country;
    }

    /**
     * Setter for <code>fab.view_euroblight.country</code>.
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for <code>fab.view_euroblight.itl_nuts</code>.
     */
    public String getItlNuts() {
        return this.itlNuts;
    }

    /**
     * Setter for <code>fab.view_euroblight.itl_nuts</code>.
     */
    public void setItlNuts(String itlNuts) {
        this.itlNuts = itlNuts;
    }

    /**
     * Getter for <code>fab.view_euroblight.outcode</code>.
     */
    public String getOutcode() {
        return this.outcode;
    }

    /**
     * Setter for <code>fab.view_euroblight.outcode</code>.
     */
    public void setOutcode(String outcode) {
        this.outcode = outcode;
    }

    /**
     * Getter for <code>fab.view_euroblight.view_latitude</code>.
     */
    public Double getViewLatitude() {
        return this.viewLatitude;
    }

    /**
     * Setter for <code>fab.view_euroblight.view_latitude</code>.
     */
    public void setViewLatitude(Double viewLatitude) {
        this.viewLatitude = viewLatitude;
    }

    /**
     * Getter for <code>fab.view_euroblight.view_longitude</code>.
     */
    public Double getViewLongitude() {
        return this.viewLongitude;
    }

    /**
     * Setter for <code>fab.view_euroblight.view_longitude</code>.
     */
    public void setViewLongitude(Double viewLongitude) {
        this.viewLongitude = viewLongitude;
    }

    /**
     * Getter for <code>fab.view_euroblight.source_name</code>.
     */
    public String getSourceName() {
        return this.sourceName;
    }

    /**
     * Setter for <code>fab.view_euroblight.source_name</code>.
     */
    public void setSourceName(String sourceName) {
        this.sourceName = sourceName;
    }

    /**
     * Getter for <code>fab.view_euroblight.severity_name</code>.
     */
    public String getSeverityName() {
        return this.severityName;
    }

    /**
     * Setter for <code>fab.view_euroblight.severity_name</code>.
     */
    public void setSeverityName(String severityName) {
        this.severityName = severityName;
    }

    /**
     * Getter for <code>fab.view_euroblight.genotype_name</code>.
     */
    public String getGenotypeName() {
        return this.genotypeName;
    }

    /**
     * Setter for <code>fab.view_euroblight.genotype_name</code>.
     */
    public void setGenotypeName(String genotypeName) {
        this.genotypeName = genotypeName;
    }

    /**
     * Getter for <code>fab.view_euroblight.source_id</code>.
     */
    public Integer getSourceId() {
        return this.sourceId;
    }

    /**
     * Setter for <code>fab.view_euroblight.source_id</code>.
     */
    public void setSourceId(Integer sourceId) {
        this.sourceId = sourceId;
    }

    /**
     * Getter for <code>fab.view_euroblight.severity_id</code>.
     */
    public Integer getSeverityId() {
        return this.severityId;
    }

    /**
     * Setter for <code>fab.view_euroblight.severity_id</code>.
     */
    public void setSeverityId(Integer severityId) {
        this.severityId = severityId;
    }

    /**
     * Getter for <code>fab.view_euroblight.variety_id</code>.
     */
    public Integer getVarietyId() {
        return this.varietyId;
    }

    /**
     * Setter for <code>fab.view_euroblight.variety_id</code>.
     */
    public void setVarietyId(Integer varietyId) {
        this.varietyId = varietyId;
    }

    /**
     * Getter for <code>fab.view_euroblight.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>fab.view_euroblight.user_id</code>.
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>fab.view_euroblight.status</code>.
     */
    public ViewEuroblightStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>fab.view_euroblight.status</code>.
     */
    public void setStatus(ViewEuroblightStatus status) {
        this.status = status;
    }

    /**
     * Getter for <code>fab.view_euroblight.date_submitted</code>.
     */
    public LocalDate getDateSubmitted() {
        return this.dateSubmitted;
    }

    /**
     * Setter for <code>fab.view_euroblight.date_submitted</code>.
     */
    public void setDateSubmitted(LocalDate dateSubmitted) {
        this.dateSubmitted = dateSubmitted;
    }

    /**
     * Getter for <code>fab.view_euroblight.date_genotyped</code>.
     */
    public LocalDate getDateGenotyped() {
        return this.dateGenotyped;
    }

    /**
     * Setter for <code>fab.view_euroblight.date_genotyped</code>.
     */
    public void setDateGenotyped(LocalDate dateGenotyped) {
        this.dateGenotyped = dateGenotyped;
    }

    /**
     * Getter for <code>fab.view_euroblight.admin_comments</code>.
     */
    public String getAdminComments() {
        return this.adminComments;
    }

    /**
     * Setter for <code>fab.view_euroblight.admin_comments</code>.
     */
    public void setAdminComments(String adminComments) {
        this.adminComments = adminComments;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ViewEuroblight other = (ViewEuroblight) obj;
        if (this.subsampleCode == null) {
            if (other.subsampleCode != null)
                return false;
        }
        else if (!this.subsampleCode.equals(other.subsampleCode))
            return false;
        if (this.material == null) {
            if (other.material != null)
                return false;
        }
        else if (!this.material.equals(other.material))
            return false;
        if (this.myceliaPellet == null) {
            if (other.myceliaPellet != null)
                return false;
        }
        else if (!this.myceliaPellet.equals(other.myceliaPellet))
            return false;
        if (this.cultureSlope == null) {
            if (other.cultureSlope != null)
                return false;
        }
        else if (!this.cultureSlope.equals(other.cultureSlope))
            return false;
        if (this.matingType == null) {
            if (other.matingType != null)
                return false;
        }
        else if (!this.matingType.equals(other.matingType))
            return false;
        if (this.outbreakCode == null) {
            if (other.outbreakCode != null)
                return false;
        }
        else if (!this.outbreakCode.equals(other.outbreakCode))
            return false;
        if (this.host == null) {
            if (other.host != null)
                return false;
        }
        else if (!this.host.equals(other.host))
            return false;
        if (this.userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!this.userName.equals(other.userName))
            return false;
        if (this.varietyName == null) {
            if (other.varietyName != null)
                return false;
        }
        else if (!this.varietyName.equals(other.varietyName))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        if (this.itlNuts == null) {
            if (other.itlNuts != null)
                return false;
        }
        else if (!this.itlNuts.equals(other.itlNuts))
            return false;
        if (this.outcode == null) {
            if (other.outcode != null)
                return false;
        }
        else if (!this.outcode.equals(other.outcode))
            return false;
        if (this.viewLatitude == null) {
            if (other.viewLatitude != null)
                return false;
        }
        else if (!this.viewLatitude.equals(other.viewLatitude))
            return false;
        if (this.viewLongitude == null) {
            if (other.viewLongitude != null)
                return false;
        }
        else if (!this.viewLongitude.equals(other.viewLongitude))
            return false;
        if (this.sourceName == null) {
            if (other.sourceName != null)
                return false;
        }
        else if (!this.sourceName.equals(other.sourceName))
            return false;
        if (this.severityName == null) {
            if (other.severityName != null)
                return false;
        }
        else if (!this.severityName.equals(other.severityName))
            return false;
        if (this.genotypeName == null) {
            if (other.genotypeName != null)
                return false;
        }
        else if (!this.genotypeName.equals(other.genotypeName))
            return false;
        if (this.sourceId == null) {
            if (other.sourceId != null)
                return false;
        }
        else if (!this.sourceId.equals(other.sourceId))
            return false;
        if (this.severityId == null) {
            if (other.severityId != null)
                return false;
        }
        else if (!this.severityId.equals(other.severityId))
            return false;
        if (this.varietyId == null) {
            if (other.varietyId != null)
                return false;
        }
        else if (!this.varietyId.equals(other.varietyId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.dateSubmitted == null) {
            if (other.dateSubmitted != null)
                return false;
        }
        else if (!this.dateSubmitted.equals(other.dateSubmitted))
            return false;
        if (this.dateGenotyped == null) {
            if (other.dateGenotyped != null)
                return false;
        }
        else if (!this.dateGenotyped.equals(other.dateGenotyped))
            return false;
        if (this.adminComments == null) {
            if (other.adminComments != null)
                return false;
        }
        else if (!this.adminComments.equals(other.adminComments))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.subsampleCode == null) ? 0 : this.subsampleCode.hashCode());
        result = prime * result + ((this.material == null) ? 0 : this.material.hashCode());
        result = prime * result + ((this.myceliaPellet == null) ? 0 : this.myceliaPellet.hashCode());
        result = prime * result + ((this.cultureSlope == null) ? 0 : this.cultureSlope.hashCode());
        result = prime * result + ((this.matingType == null) ? 0 : this.matingType.hashCode());
        result = prime * result + ((this.outbreakCode == null) ? 0 : this.outbreakCode.hashCode());
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        result = prime * result + ((this.varietyName == null) ? 0 : this.varietyName.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.itlNuts == null) ? 0 : this.itlNuts.hashCode());
        result = prime * result + ((this.outcode == null) ? 0 : this.outcode.hashCode());
        result = prime * result + ((this.viewLatitude == null) ? 0 : this.viewLatitude.hashCode());
        result = prime * result + ((this.viewLongitude == null) ? 0 : this.viewLongitude.hashCode());
        result = prime * result + ((this.sourceName == null) ? 0 : this.sourceName.hashCode());
        result = prime * result + ((this.severityName == null) ? 0 : this.severityName.hashCode());
        result = prime * result + ((this.genotypeName == null) ? 0 : this.genotypeName.hashCode());
        result = prime * result + ((this.sourceId == null) ? 0 : this.sourceId.hashCode());
        result = prime * result + ((this.severityId == null) ? 0 : this.severityId.hashCode());
        result = prime * result + ((this.varietyId == null) ? 0 : this.varietyId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.dateSubmitted == null) ? 0 : this.dateSubmitted.hashCode());
        result = prime * result + ((this.dateGenotyped == null) ? 0 : this.dateGenotyped.hashCode());
        result = prime * result + ((this.adminComments == null) ? 0 : this.adminComments.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewEuroblight (");

        sb.append(subsampleCode);
        sb.append(", ").append(material);
        sb.append(", ").append(myceliaPellet);
        sb.append(", ").append(cultureSlope);
        sb.append(", ").append(matingType);
        sb.append(", ").append(outbreakCode);
        sb.append(", ").append(host);
        sb.append(", ").append(userName);
        sb.append(", ").append(varietyName);
        sb.append(", ").append(country);
        sb.append(", ").append(itlNuts);
        sb.append(", ").append(outcode);
        sb.append(", ").append(viewLatitude);
        sb.append(", ").append(viewLongitude);
        sb.append(", ").append(sourceName);
        sb.append(", ").append(severityName);
        sb.append(", ").append(genotypeName);
        sb.append(", ").append(sourceId);
        sb.append(", ").append(severityId);
        sb.append(", ").append(varietyId);
        sb.append(", ").append(userId);
        sb.append(", ").append(status);
        sb.append(", ").append(dateSubmitted);
        sb.append(", ").append(dateGenotyped);
        sb.append(", ").append(adminComments);

        sb.append(")");
        return sb.toString();
    }
}
