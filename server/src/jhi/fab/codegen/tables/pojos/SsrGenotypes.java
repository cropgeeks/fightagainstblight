/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SsrGenotypes implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer genotypeId;
    private String genotypeName;

    public SsrGenotypes() {}

    public SsrGenotypes(SsrGenotypes value) {
        this.genotypeId = value.genotypeId;
        this.genotypeName = value.genotypeName;
    }

    public SsrGenotypes(
        Integer genotypeId,
        String genotypeName
    ) {
        this.genotypeId = genotypeId;
        this.genotypeName = genotypeName;
    }

    /**
     * Getter for <code>fab.ssr_genotypes.genotype_id</code>.
     */
    public Integer getGenotypeId() {
        return this.genotypeId;
    }

    /**
     * Setter for <code>fab.ssr_genotypes.genotype_id</code>.
     */
    public void setGenotypeId(Integer genotypeId) {
        this.genotypeId = genotypeId;
    }

    /**
     * Getter for <code>fab.ssr_genotypes.genotype_name</code>.
     */
    public String getGenotypeName() {
        return this.genotypeName;
    }

    /**
     * Setter for <code>fab.ssr_genotypes.genotype_name</code>.
     */
    public void setGenotypeName(String genotypeName) {
        this.genotypeName = genotypeName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SsrGenotypes other = (SsrGenotypes) obj;
        if (this.genotypeId == null) {
            if (other.genotypeId != null)
                return false;
        }
        else if (!this.genotypeId.equals(other.genotypeId))
            return false;
        if (this.genotypeName == null) {
            if (other.genotypeName != null)
                return false;
        }
        else if (!this.genotypeName.equals(other.genotypeName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.genotypeId == null) ? 0 : this.genotypeId.hashCode());
        result = prime * result + ((this.genotypeName == null) ? 0 : this.genotypeName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SsrGenotypes (");

        sb.append(genotypeId);
        sb.append(", ").append(genotypeName);

        sb.append(")");
        return sb.toString();
    }
}
