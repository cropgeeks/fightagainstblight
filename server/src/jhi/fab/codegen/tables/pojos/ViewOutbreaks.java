/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;

import jhi.fab.codegen.enums.ViewOutbreaksStatus;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewOutbreaks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer outbreakId;
    private String outbreakCode;
    private LocalDate dateReceived;
    private LocalDate dateSubmitted;
    private Double realLatitude;
    private Double realLongitude;
    private Double viewLatitude;
    private Double viewLongitude;
    private ViewOutbreaksStatus status;
    private Integer severityId;
    private String severityName;
    private Integer sourceId;
    private String sourceName;
    private Integer userId;
    private Boolean isAdmin;
    private String userEmail;
    private String userName;

    public ViewOutbreaks() {}

    public ViewOutbreaks(ViewOutbreaks value) {
        this.outbreakId = value.outbreakId;
        this.outbreakCode = value.outbreakCode;
        this.dateReceived = value.dateReceived;
        this.dateSubmitted = value.dateSubmitted;
        this.realLatitude = value.realLatitude;
        this.realLongitude = value.realLongitude;
        this.viewLatitude = value.viewLatitude;
        this.viewLongitude = value.viewLongitude;
        this.status = value.status;
        this.severityId = value.severityId;
        this.severityName = value.severityName;
        this.sourceId = value.sourceId;
        this.sourceName = value.sourceName;
        this.userId = value.userId;
        this.isAdmin = value.isAdmin;
        this.userEmail = value.userEmail;
        this.userName = value.userName;
    }

    public ViewOutbreaks(
        Integer outbreakId,
        String outbreakCode,
        LocalDate dateReceived,
        LocalDate dateSubmitted,
        Double realLatitude,
        Double realLongitude,
        Double viewLatitude,
        Double viewLongitude,
        ViewOutbreaksStatus status,
        Integer severityId,
        String severityName,
        Integer sourceId,
        String sourceName,
        Integer userId,
        Boolean isAdmin,
        String userEmail,
        String userName
    ) {
        this.outbreakId = outbreakId;
        this.outbreakCode = outbreakCode;
        this.dateReceived = dateReceived;
        this.dateSubmitted = dateSubmitted;
        this.realLatitude = realLatitude;
        this.realLongitude = realLongitude;
        this.viewLatitude = viewLatitude;
        this.viewLongitude = viewLongitude;
        this.status = status;
        this.severityId = severityId;
        this.severityName = severityName;
        this.sourceId = sourceId;
        this.sourceName = sourceName;
        this.userId = userId;
        this.isAdmin = isAdmin;
        this.userEmail = userEmail;
        this.userName = userName;
    }

    /**
     * Getter for <code>fab.view_outbreaks.outbreak_id</code>.
     */
    public Integer getOutbreakId() {
        return this.outbreakId;
    }

    /**
     * Setter for <code>fab.view_outbreaks.outbreak_id</code>.
     */
    public void setOutbreakId(Integer outbreakId) {
        this.outbreakId = outbreakId;
    }

    /**
     * Getter for <code>fab.view_outbreaks.outbreak_code</code>.
     */
    public String getOutbreakCode() {
        return this.outbreakCode;
    }

    /**
     * Setter for <code>fab.view_outbreaks.outbreak_code</code>.
     */
    public void setOutbreakCode(String outbreakCode) {
        this.outbreakCode = outbreakCode;
    }

    /**
     * Getter for <code>fab.view_outbreaks.date_received</code>.
     */
    public LocalDate getDateReceived() {
        return this.dateReceived;
    }

    /**
     * Setter for <code>fab.view_outbreaks.date_received</code>.
     */
    public void setDateReceived(LocalDate dateReceived) {
        this.dateReceived = dateReceived;
    }

    /**
     * Getter for <code>fab.view_outbreaks.date_submitted</code>.
     */
    public LocalDate getDateSubmitted() {
        return this.dateSubmitted;
    }

    /**
     * Setter for <code>fab.view_outbreaks.date_submitted</code>.
     */
    public void setDateSubmitted(LocalDate dateSubmitted) {
        this.dateSubmitted = dateSubmitted;
    }

    /**
     * Getter for <code>fab.view_outbreaks.real_latitude</code>.
     */
    public Double getRealLatitude() {
        return this.realLatitude;
    }

    /**
     * Setter for <code>fab.view_outbreaks.real_latitude</code>.
     */
    public void setRealLatitude(Double realLatitude) {
        this.realLatitude = realLatitude;
    }

    /**
     * Getter for <code>fab.view_outbreaks.real_longitude</code>.
     */
    public Double getRealLongitude() {
        return this.realLongitude;
    }

    /**
     * Setter for <code>fab.view_outbreaks.real_longitude</code>.
     */
    public void setRealLongitude(Double realLongitude) {
        this.realLongitude = realLongitude;
    }

    /**
     * Getter for <code>fab.view_outbreaks.view_latitude</code>.
     */
    public Double getViewLatitude() {
        return this.viewLatitude;
    }

    /**
     * Setter for <code>fab.view_outbreaks.view_latitude</code>.
     */
    public void setViewLatitude(Double viewLatitude) {
        this.viewLatitude = viewLatitude;
    }

    /**
     * Getter for <code>fab.view_outbreaks.view_longitude</code>.
     */
    public Double getViewLongitude() {
        return this.viewLongitude;
    }

    /**
     * Setter for <code>fab.view_outbreaks.view_longitude</code>.
     */
    public void setViewLongitude(Double viewLongitude) {
        this.viewLongitude = viewLongitude;
    }

    /**
     * Getter for <code>fab.view_outbreaks.status</code>.
     */
    public ViewOutbreaksStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>fab.view_outbreaks.status</code>.
     */
    public void setStatus(ViewOutbreaksStatus status) {
        this.status = status;
    }

    /**
     * Getter for <code>fab.view_outbreaks.severity_id</code>.
     */
    public Integer getSeverityId() {
        return this.severityId;
    }

    /**
     * Setter for <code>fab.view_outbreaks.severity_id</code>.
     */
    public void setSeverityId(Integer severityId) {
        this.severityId = severityId;
    }

    /**
     * Getter for <code>fab.view_outbreaks.severity_name</code>.
     */
    public String getSeverityName() {
        return this.severityName;
    }

    /**
     * Setter for <code>fab.view_outbreaks.severity_name</code>.
     */
    public void setSeverityName(String severityName) {
        this.severityName = severityName;
    }

    /**
     * Getter for <code>fab.view_outbreaks.source_id</code>.
     */
    public Integer getSourceId() {
        return this.sourceId;
    }

    /**
     * Setter for <code>fab.view_outbreaks.source_id</code>.
     */
    public void setSourceId(Integer sourceId) {
        this.sourceId = sourceId;
    }

    /**
     * Getter for <code>fab.view_outbreaks.source_name</code>.
     */
    public String getSourceName() {
        return this.sourceName;
    }

    /**
     * Setter for <code>fab.view_outbreaks.source_name</code>.
     */
    public void setSourceName(String sourceName) {
        this.sourceName = sourceName;
    }

    /**
     * Getter for <code>fab.view_outbreaks.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>fab.view_outbreaks.user_id</code>.
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>fab.view_outbreaks.is_admin</code>.
     */
    public Boolean getIsAdmin() {
        return this.isAdmin;
    }

    /**
     * Setter for <code>fab.view_outbreaks.is_admin</code>.
     */
    public void setIsAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    /**
     * Getter for <code>fab.view_outbreaks.user_email</code>.
     */
    public String getUserEmail() {
        return this.userEmail;
    }

    /**
     * Setter for <code>fab.view_outbreaks.user_email</code>.
     */
    public void setUserEmail(String userEmail) {
        this.userEmail = userEmail;
    }

    /**
     * Getter for <code>fab.view_outbreaks.user_name</code>.
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Setter for <code>fab.view_outbreaks.user_name</code>.
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ViewOutbreaks other = (ViewOutbreaks) obj;
        if (this.outbreakId == null) {
            if (other.outbreakId != null)
                return false;
        }
        else if (!this.outbreakId.equals(other.outbreakId))
            return false;
        if (this.outbreakCode == null) {
            if (other.outbreakCode != null)
                return false;
        }
        else if (!this.outbreakCode.equals(other.outbreakCode))
            return false;
        if (this.dateReceived == null) {
            if (other.dateReceived != null)
                return false;
        }
        else if (!this.dateReceived.equals(other.dateReceived))
            return false;
        if (this.dateSubmitted == null) {
            if (other.dateSubmitted != null)
                return false;
        }
        else if (!this.dateSubmitted.equals(other.dateSubmitted))
            return false;
        if (this.realLatitude == null) {
            if (other.realLatitude != null)
                return false;
        }
        else if (!this.realLatitude.equals(other.realLatitude))
            return false;
        if (this.realLongitude == null) {
            if (other.realLongitude != null)
                return false;
        }
        else if (!this.realLongitude.equals(other.realLongitude))
            return false;
        if (this.viewLatitude == null) {
            if (other.viewLatitude != null)
                return false;
        }
        else if (!this.viewLatitude.equals(other.viewLatitude))
            return false;
        if (this.viewLongitude == null) {
            if (other.viewLongitude != null)
                return false;
        }
        else if (!this.viewLongitude.equals(other.viewLongitude))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.severityId == null) {
            if (other.severityId != null)
                return false;
        }
        else if (!this.severityId.equals(other.severityId))
            return false;
        if (this.severityName == null) {
            if (other.severityName != null)
                return false;
        }
        else if (!this.severityName.equals(other.severityName))
            return false;
        if (this.sourceId == null) {
            if (other.sourceId != null)
                return false;
        }
        else if (!this.sourceId.equals(other.sourceId))
            return false;
        if (this.sourceName == null) {
            if (other.sourceName != null)
                return false;
        }
        else if (!this.sourceName.equals(other.sourceName))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.isAdmin == null) {
            if (other.isAdmin != null)
                return false;
        }
        else if (!this.isAdmin.equals(other.isAdmin))
            return false;
        if (this.userEmail == null) {
            if (other.userEmail != null)
                return false;
        }
        else if (!this.userEmail.equals(other.userEmail))
            return false;
        if (this.userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!this.userName.equals(other.userName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.outbreakId == null) ? 0 : this.outbreakId.hashCode());
        result = prime * result + ((this.outbreakCode == null) ? 0 : this.outbreakCode.hashCode());
        result = prime * result + ((this.dateReceived == null) ? 0 : this.dateReceived.hashCode());
        result = prime * result + ((this.dateSubmitted == null) ? 0 : this.dateSubmitted.hashCode());
        result = prime * result + ((this.realLatitude == null) ? 0 : this.realLatitude.hashCode());
        result = prime * result + ((this.realLongitude == null) ? 0 : this.realLongitude.hashCode());
        result = prime * result + ((this.viewLatitude == null) ? 0 : this.viewLatitude.hashCode());
        result = prime * result + ((this.viewLongitude == null) ? 0 : this.viewLongitude.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.severityId == null) ? 0 : this.severityId.hashCode());
        result = prime * result + ((this.severityName == null) ? 0 : this.severityName.hashCode());
        result = prime * result + ((this.sourceId == null) ? 0 : this.sourceId.hashCode());
        result = prime * result + ((this.sourceName == null) ? 0 : this.sourceName.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.isAdmin == null) ? 0 : this.isAdmin.hashCode());
        result = prime * result + ((this.userEmail == null) ? 0 : this.userEmail.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewOutbreaks (");

        sb.append(outbreakId);
        sb.append(", ").append(outbreakCode);
        sb.append(", ").append(dateReceived);
        sb.append(", ").append(dateSubmitted);
        sb.append(", ").append(realLatitude);
        sb.append(", ").append(realLongitude);
        sb.append(", ").append(viewLatitude);
        sb.append(", ").append(viewLongitude);
        sb.append(", ").append(status);
        sb.append(", ").append(severityId);
        sb.append(", ").append(severityName);
        sb.append(", ").append(sourceId);
        sb.append(", ").append(sourceName);
        sb.append(", ").append(userId);
        sb.append(", ").append(isAdmin);
        sb.append(", ").append(userEmail);
        sb.append(", ").append(userName);

        sb.append(")");
        return sb.toString();
    }
}
