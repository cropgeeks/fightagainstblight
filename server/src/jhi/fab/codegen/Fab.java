/*
 * This file is generated by jOOQ.
 */
package jhi.fab.codegen;


import java.util.Arrays;
import java.util.List;

import jhi.fab.codegen.tables.Outbreaks;
import jhi.fab.codegen.tables.Severities;
import jhi.fab.codegen.tables.Sources;
import jhi.fab.codegen.tables.SsrGenotypes;
import jhi.fab.codegen.tables.Subsamples;
import jhi.fab.codegen.tables.UserSessions;
import jhi.fab.codegen.tables.Users;
import jhi.fab.codegen.tables.Varieties;
import jhi.fab.codegen.tables.ViewOutbreaks;
import jhi.fab.codegen.tables.ViewSubsamples;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Fab extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>fab</code>
     */
    public static final Fab FAB = new Fab();

    /**
     * The table <code>fab.outbreaks</code>.
     */
    public final Outbreaks OUTBREAKS = Outbreaks.OUTBREAKS;

    /**
     * The table <code>fab.severities</code>.
     */
    public final Severities SEVERITIES = Severities.SEVERITIES;

    /**
     * The table <code>fab.sources</code>.
     */
    public final Sources SOURCES = Sources.SOURCES;

    /**
     * The table <code>fab.ssr_genotypes</code>.
     */
    public final SsrGenotypes SSR_GENOTYPES = SsrGenotypes.SSR_GENOTYPES;

    /**
     * The table <code>fab.subsamples</code>.
     */
    public final Subsamples SUBSAMPLES = Subsamples.SUBSAMPLES;

    /**
     * The table <code>fab.user_sessions</code>.
     */
    public final UserSessions USER_SESSIONS = UserSessions.USER_SESSIONS;

    /**
     * The table <code>fab.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>fab.varieties</code>.
     */
    public final Varieties VARIETIES = Varieties.VARIETIES;

    /**
     * The table <code>fab.view_outbreaks</code>.
     */
    public final ViewOutbreaks VIEW_OUTBREAKS = ViewOutbreaks.VIEW_OUTBREAKS;

    /**
     * The table <code>fab.view_subsamples</code>.
     */
    public final ViewSubsamples VIEW_SUBSAMPLES = ViewSubsamples.VIEW_SUBSAMPLES;

    /**
     * No further instances allowed
     */
    private Fab() {
        super(DSL.name("fab"), null, DSL.comment(""));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Outbreaks.OUTBREAKS,
            Severities.SEVERITIES,
            Sources.SOURCES,
            SsrGenotypes.SSR_GENOTYPES,
            Subsamples.SUBSAMPLES,
            UserSessions.USER_SESSIONS,
            Users.USERS,
            Varieties.VARIETIES,
            ViewOutbreaks.VIEW_OUTBREAKS,
            ViewSubsamples.VIEW_SUBSAMPLES
        );
    }
}
